{
    "name": "brightscript",
    "displayName": "BrightScript Language",
    "version": "1.2.2",
    "publisher": "celsoaf",
    "description": "Language support for Roku's BrightScript language.",
    "author": {
        "name": "Bronley Plumb",
        "email": "bronley@gmail.com"
    },
    "icon": "images/icon.png",
    "license": "MIT",
    "keywords": [
        "multi-root-ready"
    ],
    "engines": {
        "vscode": "^1.18.0",
        "node": "^7.9.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/TwitchBronBron/vscode-brightscript-language"
    },
    "bugs": {
        "url": "https://github.com/TwitchBronBron/vscode-brightscript-language/issues"
    },
    "scripts": {
        "prepare": "npm run compile",
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./src",
        "tslint": "tslint ./src/**/*.ts",
        "watch": "tsc -w -p ./src",
        "test": "nyc mocha src/**/*.spec.ts --full-trace --bail",
        "coverage": "nyc report --reporter=text-lcov | coveralls",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "package": "vsce package",
        "publish": "vsce publish"
    },
    "dependencies": {
        "@types/glob": "^5.0.36",
        "brightscript-formatter": "^1.3.0",
        "eol": "^0.9.1",
        "find-in-files": "^0.4.0",
        "fs-extra": "^4.0.3",
        "glob": "^7.1.3",
        "net": "^1.0.2",
        "path": "^0.12.7",
        "q": "^1.5.1",
        "roku-deploy": "^0.2.1",
        "vscode-debugadapter": "1.27.0",
        "vscode-debugprotocol": "1.27.0",
        "hoek": "^5.0.3",
        "vscode-uri": "1.0.1",
        "iconv-lite": "latest"
    },
    "devDependencies": {
        "@types/chai": "^4.1.5",
        "@types/fs-extra": "^4.0.8",
        "@types/mocha": "^5.2.5",
        "@types/node": "7.0.55",
        "@types/sinon": "^2.3.7",
        "chai": "^4.2.0",
        "coveralls": "^3.0.2",
        "cson-parser": "^1.3.5",
        "fast-plist": "^0.1.2",
        "mocha": "^5.2.0",
        "nyc": "^11.9.0",
        "sinon": "^4.5.0",
        "source-map-support": "^0.5.9",
        "ts-node": "^5.0.1",
        "tslint": "5.9.1",
        "typescript": "2.6.2",
        "vsce": "^1.50.0",
        "vscode": "^1.1.21",
        "vscode-debugadapter-testsupport": "1.27.0"
    },
    "main": "./out/extension",
    "activationEvents": [
        "onDebug",
        "onLanguage:brightscript"
    ],
    "contributes": {
        "breakpoints": [
            {
                "language": "brightscript"
            }
        ],
        "debuggers": [
            {
                "type": "brightscript",
                "label": "BrightScript Debug",
                "program": "./out/debugAdapter.js",
                "runtime": "node",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "host",
                            "password",
                            "rootDir"
                        ],
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The host or ip address for the target Roku",
                                "default": "${promptForHost}"
                            },
                            "password": {
                                "type": "string",
                                "description": "The password for the developer page on the target Roku",
                                "default": "${promptForPassword}"
                            },
                            "rootDir": {
                                "type": "string",
                                "description": "The root directory that contains your Roku project. This path should point to the folder containing your manifest file",
                                "default": true
                            },
                            "debugRootDir": {
                                "type": "string",
                                "description": "If you have a build system, rootDir will point to the build output folder, and this path should point to the actual source folder so that breakpoints can be set in the source files when debugging. In order for this to work, your build process cannot change line offsets between source files and built files, otherwise debugger lines will be out of sync.",
                                "default": "${workspaceFolder}"
                            },
                            "outDir": {
                                "type": "string",
                                "description": "The folder where the build artifacts and zip folder are placed",
                                "default": "${workspaceFolder}/out"
                            },
                            "stopOnEntry": {
                                "type": "boolean",
                                "description": "Automatically stop program after launch.",
                                "default": true
                            },
                            "retainStagingFolder": {
                                "type": "boolean",
                                "description": "Prevent the staging folder from being deleted after the deployment package is created.  This is helpful for troubleshooting why your package isn't being created the way you expected.",
                                "default": false
                            },
                            "retainDeploymentArchive": {
                                "type": "boolean",
                                "description": "Prevent the deployment package from being deleted after launching a debug session.",
                                "default": true
                            },
                            "consoleOutput": {
                                "type": "string",
                                "description": "Determines which console output event to listen for. 'full' is every console message (including the ones from the adapter). 'normal' excludes output initiated by the adapter",
                                "default": "normal",
                                "enum": [
                                    "full",
                                    "normal"
                                ]
                            },
                            "files": {
                                "type": "array",
                                "description": "An array of file paths, file globs, or {src:string;dest:string} objects that will be copied into the deployment package. This will override the defaults, so if specified, you must provide ALL files.",
                                "default": [
                                    "manifest",
                                    "source/**/*.*",
                                    "components/**/*.*",
                                    "images/**/*.*"
                                ],
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "description": "A file path or file glob that should be copied to the deployment package."
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "src": {
                                                    "type": "string",
                                                    "description": "A file path or glob pattern of source file(s) to be included in the deployment package"
                                                },
                                                "dest": {
                                                    "type": "string",
                                                    "description": "The destination for the file(s) found in 'src'. If this path is a directory, you must end it in a trailing slash"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "type": "brightscript",
                        "request": "launch",
                        "name": "BrightScript Debug: Launch",
                        "host": "${promptForHost}",
                        "password": "${promptForPassword}",
                        "rootDir": "${workspaceFolder}"
                    }
                ],
                "configurationSnippets": [
                    {
                        "label": "BrightScript Debug: Launch",
                        "description": "Package, deploy and debug a BrightScript project on a remote Roku device",
                        "body": {
                            "type": "brightscript",
                            "request": "launch",
                            "name": "BrightScript Debug: Launch",
                            "stopOnEntry": true,
                            "host": "${promptForHost}",
                            "password": "${promptForPassword}",
                            "rootDir": "^\"\\${workspaceFolder}\"",
                            "consoleOutput": "normal"
                        }
                    }
                ]
            }
        ],
        "languages": [
            {
                "id": "brightscript",
                "extensions": [
                    ".brs",
                    ".bs"
                ],
                "aliases": [
                    "BrightScript"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "brightscript",
                "scopeName": "source.brs",
                "path": "./syntaxes/brightscript.tmLanguage.json"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "BrightScript configuration",
            "properties": {
                "brightscript.format.keywordCase": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "enum": [
                        "lower",
                        "upper",
                        "title",
                        null
                    ],
                    "default": "lower",
                    "description": "Replaces all keywords with the upper or lower case settings specified. null means they are not modified at all.",
                    "scope": "resource"
                },
                "brightscript.format.compositeKeywords": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "enum": [
                        "split",
                        "combine",
                        null
                    ],
                    "default": "split",
                    "description": "Forces all composite keywords (i.e. 'elseif', 'endwhile', etc...) to be consistent. If 'split', they are split into their alternatives ('else if', 'end while'). If 'combine', they are combined ('elseif', 'endwhile'). If null, they are not modified.",
                    "scope": "resource"
                },
                "brightscript.format.removeTrailingWhiteSpace": {
                    "type": "boolean",
                    "default": true,
                    "description": "Removes all trailing whitespace at the end of each line.",
                    "scope": "resource"
                }
            }
        },
        "commands": [
            {
                "command": "extension.brightscript.toggleXML",
                "title": "Toggle xml/brs",
                "category": "Brightscript"
            },
            {
                "command": "extension.brightscript.showErrors",
                "title": "showErrors",
                "category": "Brightscript"
            }
        ]
    },
    "watch": {
        "test": {
            "extensions": "ts",
            "patterns": [
                "src"
            ]
        }
    },
    "nyc": {
        "include": [
            "src/**/!(*.spec).ts"
        ],
        "extension": [
            ".ts"
        ],
        "require": [
            "ts-node/register",
            "source-map-support/register"
        ],
        "reporter": [
            "text-summary",
            "html"
        ],
        "sourceMap": true,
        "instrument": true,
        "check-coverage": true,
        "lines": 5,
        "statements": 5,
        "functions": 5,
        "branches": 5
    },
    "categories": [
        "Formatters",
        "Programming Languages",
        "Debuggers"
    ]
}
